// ===== Device Detection =====
function detectDevice() {
    const userAgent = navigator.userAgent.toLowerCase();
    const isIOS = /iphone|ipad|ipod/.test(userAgent);
    const isAndroid = /android/.test(userAgent);
    const isMobile = isIOS || isAndroid;
    const isStandalone = window.matchMedia('(display-mode: standalone)').matches || 
                         window.navigator.standalone === true;

    return {
        isIOS,
        isAndroid,
        isMobile,
        isDesktop: !isMobile,
        isStandalone
    };
}

// ===== PWA Install Handler =====
let deferredPrompt = null;

// –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏–µ beforeinstallprompt
window.addEventListener('beforeinstallprompt', (e) => {
    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∫–∞–∑ –ø—Ä–æ–º–ø—Ç–∞
    e.preventDefault();
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–æ–∑–∂–µ
    deferredPrompt = e;
    console.log('PWA installable');
});

// –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏
window.addEventListener('appinstalled', (e) => {
    console.log('PWA installed successfully');
    deferredPrompt = null;

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–µ
    showSuccessMessage();
});

// ===== DOM Elements =====
const installButton = document.getElementById('installButton');
const modal = document.getElementById('installModal');
const closeModalBtn = document.getElementById('closeModal');
const skipButton = document.getElementById('skipButton');
const iosGuide = document.getElementById('iosGuide');
const androidGuide = document.getElementById('androidGuide');
const desktopGuide = document.getElementById('desktopGuide');

// ===== Show Installation Guide =====
function showInstallGuide() {
    const device = detectDevice();

    // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞
    iosGuide.style.display = 'none';
    androidGuide.style.display = 'none';
    desktopGuide.style.display = 'none';

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ
    if (device.isIOS) {
        iosGuide.style.display = 'block';
    } else if (device.isAndroid) {
        androidGuide.style.display = 'block';
    } else {
        desktopGuide.style.display = 'block';
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    modal.classList.add('show');
    document.body.style.overflow = 'hidden';
}

// ===== Hide Installation Guide =====
function hideInstallGuide() {
    modal.classList.remove('show');
    document.body.style.overflow = '';
}

// ===== Install PWA =====
async function installPWA() {
    const device = detectDevice();

    // –ï—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
    // if (device.isStandalone) {
    //     alert('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ! üéâ');
    //     return;
    // }
if (device.isStandalone) {
    window.location.href = 'map.html';
}

    // –î–ª—è Chrome/Edge –Ω–∞ Android –∏ Desktop
    if (deferredPrompt) {
        try {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—Ç–∏–≤–Ω—ã–π –ø—Ä–æ–º–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏
            deferredPrompt.prompt();

            // –ñ–¥–µ–º –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            const { outcome } = await deferredPrompt.userChoice;

            if (outcome === 'accepted') {
                console.log('User accepted the install prompt');
            } else {
                console.log('User dismissed the install prompt');
            }

            // –û—á–∏—â–∞–µ–º –ø—Ä–æ–º–ø—Ç
            deferredPrompt = null;
        } catch (error) {
            console.error('Error during PWA installation:', error);
            showInstallGuide();
        }
    } else {
        // –î–ª—è Safari –Ω–∞ iOS –∏ –¥—Ä—É–≥–∏—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
        showInstallGuide();
    }
}

// ===== Success Message =====
function showSuccessMessage() {
    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    const successDiv = document.createElement('div');
    successDiv.style.cssText = `
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) scale(0.8);
        background: white;
        padding: 32px;
        border-radius: 18px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
        z-index: 10000;
        text-align: center;
        opacity: 0;
        transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
    `;

    successDiv.innerHTML = `
        <div style="font-size: 64px; margin-bottom: 16px;">üéâ</div>
        <h3 style="font-size: 22px; font-weight: 700; margin-bottom: 8px;">–£—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!</h3>
        <p style="font-size: 15px; color: rgba(60, 60, 67, 0.6);">FreeNet –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é</p>
    `;

    document.body.appendChild(successDiv);

    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
    setTimeout(() => {
        successDiv.style.opacity = '1';
        successDiv.style.transform = 'translate(-50%, -50%) scale(1)';
    }, 10);

    // –£–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
        successDiv.style.opacity = '0';
        successDiv.style.transform = 'translate(-50%, -50%) scale(0.8)';
        setTimeout(() => {
            document.body.removeChild(successDiv);
        }, 300);
    }, 3000);
}

// ===== Event Listeners =====
installButton.addEventListener('click', installPWA);

closeModalBtn.addEventListener('click', hideInstallGuide);

skipButton.addEventListener('click', hideInstallGuide);

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Ñ–æ–Ω
modal.addEventListener('click', (e) => {
    if (e.target === modal) {
        hideInstallGuide();
    }
});

// –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∞–≤–∏—à–µ Escape
document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && modal.classList.contains('show')) {
        hideInstallGuide();
    }
});

// ===== Initialize =====
document.addEventListener('DOMContentLoaded', () => {
    const device = detectDevice();

    console.log('Device info:', device);

    // –ï—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –∏–∑ standalone —Ä–µ–∂–∏–º–∞ (—Å —Ä–∞–±–æ—á–µ–≥–æ —Å—Ç–æ–ª–∞), —Å—Ä–∞–∑—É –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∫–∞—Ä—Ç—É
    if (device.isStandalone) {
        console.log('App launched from home screen, redirecting to map...');
        window.location.href = 'map.html';
        return; // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–ª—å–Ω–µ–π—à–µ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
    }

    // –ò–∑–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    if (device.isIOS) {
        installButton.innerHTML = '<span class="button-icon">üì•</span> –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ';
    } else if (deferredPrompt) {
        installButton.innerHTML = '<span class="button-icon">üì•</span> –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ';
    }
});

// ===== Utility: Add animations on scroll =====
const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
};

const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
        if (entry.isIntersecting) {
            entry.target.classList.add('visible');
        }
    });
}, observerOptions);

// –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ —Å –∫–ª–∞—Å—Å–æ–º .fade-in
document.querySelectorAll('.fade-in').forEach(el => {
    observer.observe(el);
});
